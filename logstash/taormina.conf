input {
    udp {
        host => "0.0.0.0"
        port => "5514"
        type => "udp"
        tags => [ "pensando_flowlog" ]
    }
}
filter {
  dissect {
    mapping => { 'message' => '<%{syslog_priority}>%{syslog_version} %{gen_time} %{hostname} %{proc_name} %{proc_id} %{msg_id} %{sd} %{csv_message}'}
  }
  dissect {
    mapping => { 'csv_message' => '%{timestamp},%{[session][state]},%{[session][action]},%{vrf},%{[source][ip]},%{[source][port]},%{[destination][ip]},%{[destination][port]},%{protocol},%{[session][id]},%{[security][policy_id]},%{[security][rule_id]},%{[security][rule_name]},%{[session][iflow_pkts]},%{[session][iflow_bytes]},%{[session][rflow_pkts]},%{[session][rflow_bytes]},%{[source][vlan]},%{[dsx][type]},%{[dsx][sw_ver]},%{[dsx][ser_num]},%{[dsx][device_name]},%{[dsx][unit_id]},%{version}'}
  }
  date
  {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
    }
  mutate {
    remove_field => [ "message" ]
    remove_field => [ "csv_message" ]
    remove_field => [ "timestamp" ]
    rename => { "type" => "syslog_proto" }

  }

  mutate {
        convert => {
          "[source][port]" => "integer"
          "[destination][port]" => "integer"
          "protocol" => "integer"
          "[session][iflow_pkts]" => "integer"
          "[session][iflow_bytes]" => "integer"
          "[session][rflow_pkts]" => "integer"
          "[session][rflow_bytes]" => "integer"
          "[source][vlan]" => "integer"
        }
      }
}

output {
  elasticsearch {
        hosts    => [ 'elasticsearch' ]
        index => "pensando-fwlog-%{+YYYY.MM}"
    }

    #stdout { codec => rubydebug }
}
